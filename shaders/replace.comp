#version 430
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

struct Boid {
    vec2 pos;
    vec2 vel;
    float density;
    float pressure;
};

layout(std430, binding = 0) readonly buffer boidsBufferIn
{
    Boid boids_in[];
};

layout(std430, binding = 1) writeonly buffer boidsBufferOut
{
    Boid boids_out[];
};

layout(binding=2, r32ui) uniform uimage2D bucketSizes;
layout(binding=3, r32ui) readonly uniform uimage2D prefixSum;

layout(push_constant) uniform PushConstants {
   uint bufferLength;
}push;

ivec2 imSize = imageSize(prefixSum);

ivec2 posmod(ivec2 x, ivec2 y) {
    return (x % y + y) % y;
}
void main()
{
    uint id = gl_GlobalInvocationID.x;
    if (id>=push.bufferLength)
    return;
 
    Boid tmp = boids_in[id];
    ivec2 grid_id = posmod(ivec2(floor(tmp.pos*(imSize-ivec2(1)))),imSize);
    uint inBucketIndex = imageAtomicAdd(bucketSizes, grid_id, -1);
    uint particleIdx = imageLoad(prefixSum, grid_id).r-inBucketIndex;
    
    boids_out[particleIdx] = tmp;
}


